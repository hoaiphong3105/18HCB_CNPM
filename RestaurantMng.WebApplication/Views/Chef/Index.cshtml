
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style type="text/css">
    input, textarea {
        outline: 0 !important;
        border-width: 0 0 1px !important;
        border-color: lightskyblue !important;
    }

    .select2-selection {
        outline: 0 !important;
        border-width: 0 0 1px !important;
        border-color: lightskyblue !important;
    }

    .select2-container--default .select2-selection--multiple .select2-selection__choice {
        background-color: deepskyblue;
        border-color: #367fa9;
        padding: 1px 10px;
        color: #fff;
    }
</style>

<link href="~/Content/plugins/jnoty/jnoty.css" rel="stylesheet" />

<div>
    <!--Danh sách món ăn-->
    <div class="box box-info">
        <div class="box-header with-border">
            <h3 class="box-title">Danh sách món ăn</h3>
            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                    <i class="fa fa-minus"></i>
                </button>
            </div>
        </div>
        <!-- /.box-header -->
        <div class="box-body">
            <div class="col-sm-12">
                <div class="box-body table-responsive">
                    <table class="table table-bordered table-hover" id="tbDanhSachMonAn">
                        <thead>
                            <tr>
                                <th>Mã hóa đơn</th>
                                <th>MenuId</th>
                                <th>Tên món</th>
                                <th>Note</th>
                                <th>Số lượng</th>
                                <th>Tình trạng</th>
                                <th>Chức năng</th>
                            </tr>
                        </thead>
                        <tbody id="#example tbody"></tbody>
                    </table>
                </div>
            </div>
        </div>
        <!-- /.box-body -->
    </div>
</div>

<!--Modal thêm món-->
<div class="modal fade" id="modal-update">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Cập nhật trạng thái</h4>
            </div>
            <div class="modal-body">
                <input type="hidden" id="rowIndex" />
                <div class="row">
                    <div class="form-group col-md-9">
                        <label class="col-md-3 control-label">Tổng số</label>
                        <div class="col-md-9">
                            <input type="number" disabled="disabled" id="TotalQuantity" class="form-control" />
                        </div>
                    </div>

                    <div class="form-group col-md-9">
                        <label class="col-md-3 control-label">Cancel</label>
                        <div class="col-md-9">
                            <input type="number" id="cancel" value="0" class="form-control" />
                        </div>
                    </div>

                    <div class="form-group col-md-9">
                        <label class="col-md-3 control-label">Inprogress</label>
                        <div class="col-md-9">
                            <input type="number" id="inprogress" value="0" class="form-control" />
                        </div>
                    </div>

                    <div class="form-group col-md-9">
                        <label class="col-md-3 control-label">Completed</label>
                        <div class="col-md-9">
                            <input type="number" id="completed" value="0" class="form-control" />
                        </div>
                    </div>

                    <div class="form-group col-md-9">
                        <label class="col-md-3 control-label">Late</label>
                        <div class="col-md-9">
                            <input type="number" id="late" value="0" class="form-control" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger pull-right" data-dismiss="modal">Hủy</button>
                <button type="button" id="btnUpdate" onclick="UpdateStatus()" class="btn btn-primary" style="margin-right: 20px">Cập nhật</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>


<h2>Index</h2>

<label>str</label>
<input id="str" disabled="disabled" type="text" class="form-control" />
<div id="content">

</div>

@section scripts {
    <link href="~/Content/plugins/datatables.net-bs/dataTables.bootstrap.min.css" rel="stylesheet" />
    <script src="~/Content/plugins/datatables.net/jquery.dataTables.min.js"></script>
    <script src="~/Content/plugins/datatables.net-bs/dataTables.bootstrap.min.js"></script>
    <link href="~/Content/plugins/select2/select2.min.css" rel="stylesheet" />
    <link href="~/Content/plugins/select2/select2-bootstrap.css" rel="stylesheet" />
    <script src="~/Content/plugins/select2/select2.min.js"></script>
    <script src="~/Content/plugins/jnoty/jnoty.js"></script>
    <script src="~/Content/js/common.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            GetOrderItems();
        });

        // config table
        var table = $('#tbDanhSachMonAn').DataTable({
            'paging': true,
            'pageLength': 5,
            'lengthChange': false,
            'searching': true,
            'ordering': false,
            'info': false,
            'autoWidth': true,
            'responsive': true
        });
        table.columns([1]).visible(false);
        table.clear().draw();
        $('.dataTables_empty').html('Không có dữ liệu');
        // end config

        // cập nhât
        $("#tbDanhSachMonAn tbody").on('click', '.editButton', function () {
            var idx = $(this).closest('tr').index();
            var dataRow = table.rows(idx).data();

            $('#TotalQuantity').val(dataRow[0][4]);
            $('#cancel').val(0);
            var pQuantity = dataRow[0][5].toString().split('|');
            $('#inprogress').val(pQuantity[0]);
            $('#completed').val(pQuantity[1]);
            $('#late').val(pQuantity[2]);
            $('#rowIndex').val(idx);
            $('#modal-update').modal('show');
        });

        function UpdateStatus() {
            $('#btnSaveChange').show();
            var idx = $('#rowIndex').val();
            var dataRow = table.rows(idx).data();
            var totalUpdate = parseInt($('#cancel').val())
                + parseInt($('#inprogress').val())
                + parseInt($('#completed').val())
                + parseInt($('#late').val());

            if (totalUpdate > dataRow[0][4]) {
                showalert("Số lượng không đúng", 0);
            }
            else {
                var newData = [
                    dataRow[0][0],
                    dataRow[0][1],
                    dataRow[0][2],
                    dataRow[0][3],
                    dataRow[0][4],
                    $('#inprogress').val() + "|" + $('#completed').val() + "|" + $('#late').val(),
                    '<button type="button" class="btn btn-default editButton"><i class="fa fa-edit"></i> Edit</button>'
                ];

                $.ajax({
                    url: '/Chef/UpdateStatus',
                    method: "POST",
                    async: false,
                    dataType: "json",
                    data: {
                        orderItemId: dataRow[0][0],
                        menuId: dataRow[0][1],
                        inprogress: $('#inprogress').val(),
                        completed: $('#completed').val(),
                        late: $('#late').val()
                    },
                    success: function (result) {
                        if (result.Code == 1) {
                            table.row(idx).data(newData).draw();
                            // nếu all completed
                            if (parseInt($('#completed').val()) === parseInt($('#TotalQuantity').val())) {
                                table.row(idx).remove().draw();
                            }
                        }
                        showalert(result.Message, 2);
                    },
                    error: function (result, stt, msg) {
                        showalert(msg, 0);
                    }
                });
            }
        }

        function GetOrderItems() {
            table.clear().draw();
            $('.dataTables_empty').html('Không có dữ liệu');
            $.ajax({
                url: '/Chef/GetOrderItems',
                method: "POST",
                async: false,
                dataType: "json",
                data: {},
                success: function (result) {
                    if (result == undefined || result == null || result == "") {
                        showalert("Không có dữ liệu", 0);
                        return;
                    }
                    if (result.Code == 1) {
                        table.clear().draw();
                        if (result.Data.length > 0) {
                            $(result.Data).each(function () {
                                table.row.add([
                                    this.OrderItemId,
                                    this.MenuId,
                                    this.MenuName,
                                    this.Note,
                                    this.Quantity,
                                    this.InProgress + "|" + this.Completed + "|" + this.QuantityLate,
                                    '<button type="button" class="btn btn-default editButton"><i class="fa fa-edit"></i> Edit</button>'
                                ]);
                            });
                            table.draw();
                        }
                        else {
                            table.clear().draw();
                            $('.dataTables_empty').html('Không có dữ liệu');
                        }
                    }
                    else {
                        showalert(result.Message, 0);
                        return;
                    }
                },
                error: function (result, stt, msg) {
                    showalert(msg, 0);
                },
            });
        }
    </script>








    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    @*<script src="~/Scripts/jquery-3.3.1.min.js"></script>*@
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.4.1.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.restaurantMngHub;
            // Create a function that the hub can call back to display messages.
            chat.client.sendNoti = function (message) {
                // Add the message to the page.
                $('#content').append('<li><strong>' + htmlEncode(message.id)
                    + htmlEncode(message.content)
                    + '</strong></li>');
            }
            // Start the connection.
            $.connection.hub.start().done(function () {
                console.log('aaaa');
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }     
    </script>
}

